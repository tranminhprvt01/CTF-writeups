

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_41073911554572767455647972366020838561083369570044303703887729964573731410719 = Integer(41073911554572767455647972366020838561083369570044303703887729964573731410719); _sage_const_65537 = Integer(65537); _sage_const_1531724154087084407990783685968290906619155990636959335349158954062363819668 = Integer(1531724154087084407990783685968290906619155990636959335349158954062363819668); _sage_const_170887544648074842902147703596872069069 = Integer(170887544648074842902147703596872069069); _sage_const_1 = Integer(1); _sage_const_100 = Integer(100)
public_key = {'n': _sage_const_41073911554572767455647972366020838561083369570044303703887729964573731410719 , 'e': _sage_const_65537 }
ciphertext = _sage_const_1531724154087084407990783685968290906619155990636959335349158954062363819668 


n = public_key['n']
e = public_key['e']


p = _sage_const_170887544648074842902147703596872069069 
q = n//p
d = pow(e, -_sage_const_1 , (p-_sage_const_1 )*(q-_sage_const_1 ))


print(int(pow(ciphertext, int(d), n)).to_bytes(_sage_const_100 , 'big').strip(b'\0'))

