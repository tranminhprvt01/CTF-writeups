

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_64 = Integer(64); _sage_const_2 = Integer(2); _sage_const_128 = Integer(128)
from pwn import *
from Crypto.Util.number import long_to_bytes as ltb

io = remote("challs.actf.co", "31300")


for i in range(_sage_const_64 ):
    io.recvuntil(b'pubkey: ')
    n = int(io.recvline().rstrip().decode())

    io.recvuntil(b'plaintext: ')
    m_ = int(io.recvline().rstrip().decode())

    c = pow(m_, _sage_const_2 , n)

    P = PolynomialRing(Zmod(n), names=('x',)); (x,) = P._first_ngens(1)

    f = x**_sage_const_2  - c

    r = f.small_roots(X = _sage_const_2 **_sage_const_128 )

    print(r)

    for root in r:
        print(root)
        if int(root).bit_length() <= _sage_const_128 :
            print(root)
            io.sendlineafter(b"gimme the secret: ", ltb(int(root)).hex())




io.interactive()




io.interactive()

