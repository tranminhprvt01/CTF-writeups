from Crypto.Util.number import getPrime, isPrime, bytes_to_long
from math import isqrt

def genModulus(bit = 512):
    while True:
        p = getPrime(bit)
        q = (isqrt(p ** 3 - p + 1) + isqrt(p ** 3 + p + 1))
        q |= 1
        if isPrime(q):
            return p, q
        
p, q = genModulus()
n = p * q
e = 0x10001
m = bytes_to_long(b'vgucypher{REDACTED}')
c = pow(m, e, n)

print(f'{n = }')
print(f'{c = }')
# n = 7523781293140998607451882096704898796076092163768565712087304200400215182324649756379410550440078065696237920534742477367296417081567197022585004494811747112405395156433652625202701411069818962996111021550888868994580529474626863240129996025209501356954098924184516382540213973640819244323987746778398867413695102245486410427979362115295594344934021796224360757228881967426156002018321
# c = 4729122893508615191771352786568915014346246411614871012234877237922860851735802928814473060256192132857449564416323273716257659218305207571708060526806472749554309241758961713355359581995441282127257747583371573728547414963278837476634079999670488941162853620381858983697092979433648494756361505238332494483156763612970345610230661824490177784657989863074372327071370000873414402434703